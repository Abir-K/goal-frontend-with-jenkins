name: Goal-app-build-ECR-image-deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Build the Docker image
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker CLI & AWS CLI (only for local run)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io awscli

      - name: Set Docker image tag
        id: vars
        run: |
          echo "IMAGE_TAG=latest-$(echo ${GITHUB_SHA} | cut -c1-5)" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"

      - name: Build Docker Image
        run: |
          IMAGE_NAME="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/goal-app-frontend:${{ env.IMAGE_TAG }}"
          docker build --no-cache -t "$IMAGE_NAME" .
          echo "Built Docker image: $IMAGE_NAME"
          docker images  # List images to confirm

  # Job 2: Push the Docker image to Amazon ECR
  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com
        
      - name: Debug IMAGE_TAG
        run: |
          echo "IMAGE_TAG=latest-$(echo ${GITHUB_SHA} | cut -c1-5)" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
        
      - name: List Docker images before push
        run: docker images  # Check the images before pushing

      - name: Push Docker Image
        run: |
          IMAGE_NAME="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/goal-app-frontend:${{ env.IMAGE_TAG }}"
          echo "Pushing image: $IMAGE_NAME"
          docker push "$IMAGE_NAME"

  # Job 3: Deploy by updating Kubernetes YAML and pushing the change to GitHub
  deploy:
    needs: push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update Kubernetes Deployment YAML
        run: |
          sed -i "s|image: .*goal-app-frontend:.*|image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/goal-app-frontend:${{ env.IMAGE_TAG }}|g" ./argocd_deployment/deployment.yaml
          cat ./argocd_deployment/deployment.yaml

      - name: Commit updated Kubernetes YAML
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --local user.name "Abir-K"
          git config --local user.email "abirbeatz@gmail.com"
          git add ./argocd_deployment/deployment.yaml
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
          git push https://${{ secrets.GH_PAT }}@github.com/Abir-K/goal-frontend-with-jenkins
